# 水平居中



**未设置前：**

 <div style="width: 200px; height: 200px; border: 1px solid #000;">
      <span
        style="
          width: 50px;
          height: 50px;
          display: inline-block;
          border: 1px dashed #000;
          color: #000;
        "
        >盒子1</span
      >
      <span
        style="
          width: 50px;
          height: 100px;
          border: 1px dashed #000;
          color: #000;
          display: inline-block;
        "
        >盒子2</span
      >
      <span
        style="
          width: 50px;
          height: 150px;
          border: 1px dashed #000;
          color: #000;
          display: inline-block;
        "
        >盒子3</span
      >
    </div>


## 



## 方式一：`text-align:center`

当父元素容器为块元素时设置，改变子元素（子元素必须是行内元素）的对齐方式为水平居中，同时会调整子元素内文字和图片的水平对齐方式为水平居中。

**设置效果如下**：

 <div style="width: 200px; height: 200px; border: 1px solid #000;text-align: center; ">
      <span
        style="
          width: 50px;
          height: 50px;
          display: inline-block;
          border: 1px dashed #000;
          color: #000;
        "
        >盒子1</span
      >
      <span
        style="
          width: 50px;
          height: 100px;
          border: 1px dashed #000;
          color: #000;
          display: inline-block;
        "
        >盒子2</span
      >
      <span
        style="
          width: 50px;
          height: 150px;
          border: 1px dashed #000;
          color: #000;
          display: inline-block;
        "
        >盒子3</span
      >
    </div>

## 方式二 设置外边距`margin:0 atuo`

只适用于子元素为块级元素或者被设置为块级元素的情况，而且必须设置子元素的宽度。

因为只适用于块级元素，所以只能实现单个子元素水平居中，不能实现多个子元素水平居中的效果。

**未设置前**：

   <div style="width: 200px; height: 200px; border: 1px solid #000">
      <div
        style="
          width: 50px;
          height: 50px;
          border: 1px dashed #000;
          color: #000;
          display: block;
        "
      >
        盒子
      </div>
    </div>

**设置后：**

   <div style="width: 200px; height: 200px; border: 1px solid #000">
      <div
        style="
          width: 50px;
          height: 50px;
          border: 1px dashed #000;
          color: #000;
          display: block;
          margin : 0 auto;
        "
      >
        盒子
      </div>
    </div>

方式一只能使行内元素或文字、图片居中，而方式二只能使块级元素居中，因此在具体使用时，通常需要将两者结合起来。

效果如下：

   <div style="width: 200px; height: 200px; border: 1px solid #000">
      <div
        style="
          width: 50px;
          height: 50px;
          border: 1px dashed #000;
          color: #000;
          display: block;
          text-align : center;
          margin : 0 auto;
        "
      >
        盒子
      </div>
    </div>

## 方式三：弹性盒

父元素设置`display:flex`后成为弹性盒，设置`justify-content: center;`后使子元素水平居中。

   <div
      style="
        width: 200px;
        height: 200px;
        border: 1px solid #000;
        display: flex;
        justify-content: center;
      "
    >
      <div
        style="
          width: 50px;
          height: 50px;
          border: 1px dashed #000;
          color: #000;
        "
        >盒子1</div
      >
      <div
        style="
          width: 50px;
          height: 100px;
          border: 1px dashed #000;
          color: #000;
        "
        >盒子2</div
      >
      <div
        style="
          width: 50px;
          height: 150px;
          border: 1px dashed #000;
          color: #000;
        "
        >盒子3</div
      >
    </div>

## 方式四：设置定位（子绝父相）

选哟父元素设置相对定位，子元素设置绝对定位。然后子元素在左、上两个方向上均偏移父元素宽、高的50%,然后通过margin或者`transform:translate`来调整自身向右、向下的偏移宽、高的50%偏移量来实现子元素居中。注意，这种设置与`margin：0 auto`的情况类似，只适用于容器内子元素较少（最好是单个元素在容器内水平居中）的情况，子元素太多分别设置绝对定位工程量太大。

```html
    <div
      style="
        width: 200px;
        height: 200px;
        border: 1px solid #000;
        position: relative;
      "
    >
      <div
        style="
          width: 50px;
          height: 50px;
          border: 1px dashed #000;
          color: #000;
          position: absolute;
          left: 50%;
          transform: translateX(-50%);
        "
      >
        盒子
      </div>
    </div>
```



<div
  style="
    width: 200px;
    height: 200px;
    border: 1px solid #000;
    position: relative;
  "
>
  <div
    style="
      width: 50px;
      height: 50px;
      border: 1px dashed #000;
      color: #000;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    "
  >
    盒子
  </div>
</div>

