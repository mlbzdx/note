本章目的：认识并学习使用组件库，以`Element UI`为例，并补充了解其他组件库的存在。

# `Element UI` 

简介：Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库

地址：https://element.eleme.cn/#/zh-CN

同步练习：

* 运行`vue create practice` 搭建练习工程

* 查看官网中[安装](https://element.eleme.cn/#/zh-CN/component/installation)和[快速上手](https://element.eleme.cn/#/zh-CN/component/quickstart)教程学习引入并安装使用`Element UI`。

* `Element UI`提供了两种方式，一种是npm进行安装，另一种是使用cdn进行引入

* cdn引入：

  * 引入css样式

  * 引入vue@2 cdn资源

  * 引入javascript文件

  * 创建vue实例，使用模板组件

  * 模板组件的样式，属性，事件等信息需要在官网查询，有效果演示和代码示例：

    下面时效果示例，点击显示代码：

    ```html
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <!-- 引入Element UI的css文件 -->
        <link
          rel="stylesheet"
          href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"
        />
        <title>Document</title>
      </head>
      <body>
        <!-- 创建vue编译模板 -->
        <div id="app">
          <!--使用了Element UI提供的组件： el-button（按钮组件）和el-dialog（对话框组件 -->
          <el-button @click="visible = true">Button</el-button>
          <el-dialog :visible.sync="visible" title="Hello world">
            <p>Try Element</p>
          </el-dialog>
        </div>
        <!-- 基于vue@2开发，因此使用前需要先引入vue@2的cdn资源 -->
        <script src="https://unpkg.com/vue@2/dist/vue.js"></script>
        <!-- 引入Element UI的javascript文件 -->
        <script src="https://unpkg.com/element-ui/lib/index.js"></script>
        <script>
          //创建vue实例
          new Vue({
            el: "#app",
            data: function () {
              return { visible: false };
            },
          });
        </script>
      </body>
    </html>
    ```

* npm安装后使用

  * 安装

    ```bash
    npm i element-ui -S
    ```

  * 引入

    * 完整引入

      在`vue2`工程的`main.js`文件中要使用到`Element UI`，除了正常的导入vue和根组件，创建vue实例,渲染挂载根组件以外，还需要：

      * 引入`Element UI`插件
      * 引入`Element UI`的css样式文件
      * 安装`Element UI`插件

      ```js
      import Vue from 'vue'
      import App from './App.vue'
      import ElementUi from 'element-ui'//引入Element UI插件
      import 'element-ui/lib/theme-chalk/index.css'//引入Element UI的css样式文件
      Vue.use(ElementUi);//安装Element UI插件
      new Vue({
        render: h => h(App),
      }).$mount('#app')
      
      ```

      

    * 按需引入

      * 首先，安装 `babel-plugin-component`：

        ```bash
        npm install babel-plugin-component -D
        ```

      * 方法一：修改**`.babelrc`**

         该文件路径：`[自定义的文件名]node modules\babel-plugin-dynamic-import-node\.babelrc`

        源文件内容：

        ```json
        {
          "presets": [
            "airbnb"
          ],
          "plugins": [
            "add-module-exports",
            ["transform-replace-object-assign", { "moduleSpecifier": "object.assign" }],
          ],
        }
        ```

        复制官方文档要求替换的代码片段进行替换，替换后文件内容：

        ```json
        {
          "presets": [["es2015", { "modules": false }]],
          "plugins": [
            [
              "component",
              {
                "libraryName": "element-ui",
                "styleLibraryName": "theme-chalk"
              }
            ]
          ]
        }
        ```

        但`.babelrc`文件路径难找，推荐直接在项目根目录下的`babel.config.json`中修改配置

        方法二：修改**`babel.config.json`**（推荐）

        源文件内容：

        ```json
        module.exports = {
          presets: [
            '@vue/cli-plugin-babel/preset'
          ]
        }
        ```

        修改后的文件：

        ```json
        module.exports = {
          presets: [
            '@vue/cli-plugin-babel/preset'
          ],
          "plugins": [
            [
              "component",
              {
                "libraryName": "element-ui",
                "styleLibraryName": "theme-chalk"
              }
            ]
          ]
        }
        ```

        

        >
        > 补充区别： 推荐使用`babel.config.js`来作为整个项目的babel配置，
        >
        > `.babelrc` 只会影响本项目中的代码
        > `babel.config.js`会影响整个项目中的代码，包含node_modules中的代码

      * 最后，在`main.js`文件中按需导入需要用到的组件：

        * 具名导入需要的组件（组件名的完整列表可参考 [`components.json`](https://github.com/ElemeFE/element/blob/master/components.json) 文件，引入方式参考官方文档）
        * 向vue传递需要使用的组件或向vue中安装所需组件
        * 引入`Element UI`的css样式文件

        ```js
        import Vue from 'vue';
        import { Button, Select } from 'element-ui';//具名导入需要的组件
        import App from './App.vue';
        import 'element-ui/lib/theme-chalk/index.css'//引入`Element UI`的css样式文件
        Vue.component(Button.name, Button);//传递需要的组件-按钮组件
        Vue.component(Select.name, Select);//传递需要的组件-选择器组件
        /* 或写为
         * Vue.use(Button)
         * Vue.use(Select)
         */
        
        new Vue({
          el: '#app',
          render: h => h(App)
        });
        ```

    * 组件全局配置：

      在引入 Element 时，可以传入一个全局配置对象。该对象目前支持 `size` 与 `zIndex` 字段。`size` 用于改变组件的默认尺寸，`zIndex` 设置弹框的初始 z-index（默认值：2000）。

      完全引入：(在vue安装插件时，传入第二个对象参数)

      ```js
      import Vue from 'vue';
      import Element from 'element-ui';
      Vue.use(Element, { size: 'small', zIndex: 3000 });
      ```

      按需引入：(将对象配置赋值给vue原型上的$ELEMENT成员实例)

      ```js
      import Vue from 'vue';
      import { Button } from 'element-ui';
      
      Vue.prototype.$ELEMENT = { size: 'small', zIndex: 3000 };
      Vue.use(Button);
      ```

      